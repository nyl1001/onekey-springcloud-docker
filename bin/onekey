#!/bin/bash

. $ONEKEY_ENV_PATH/sh/color.sh

# check env path
if [[ "$ONEKEY_ENV_PATH" == "" ]]
then
  echo -e "Please set your ONEKEY_ENV_PATH for the env path <You can get the help from the README> ..."
  exit
fi

# 获取输入命令
command=$1

case $command in
  "build" )
    $OUTPUT "$RED  Build the docker config and rebuild all docker images $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/build.sh
    exit
  ;;
  "start" )
    $OUTPUT "$RED  Start all docker containers $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/start.sh
    exit
  ;;
  "restart" )
    $OUTPUT "$RED  Restart all docker containers $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/restart.sh
    exit
  ;;
  "login" )
    $OUTPUT "$RED  Into all docker containers $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/login.sh $2
    exit
  ;;
  "stop" )
    $OUTPUT "$RED  Stop all docker containers and then remove them $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/stop.sh
    exit
  ;;
  "destroy" )
    $OUTPUT "$RED  Remove all docker containers $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/destroy.sh
    exit
  ;;
  "rmi" )
    $OUTPUT "$RED  Exec docker-compose down and then remove all related docker images $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/rmi.sh
    exit
  ;;
  "list" )
    $OUTPUT "$RED  Show all the docker containers $TAILS\n"
    docker ps -a | grep onekey
    exit
  ;;
  "logs" )
    $OUTPUT "$RED  Show docker container running logs $TAILS\n"
    docker logs "${@:2}"
    exit
  ;;
  * )
$OUTPUT "
  $BLUE$FLICKER Building a development environment for the onekey team using docker $TAILS
  $BLUE$FLICKER Support onekey project develop $TAILS

  $YELLOW ONEKEY Docker Command: $TAILS
    $WHITE onekey build <config> $TAILS  build docker config and rebuild all docker images.
    $WHITE onekey list $TAILS            show docker container list
    $WHITE onekey start $TAILS           start all docker containers
    $WHITE onekey restart $TAILS         restart all docker containers
    $WHITE onekey stop $TAILS            stop all docker containers
    $WHITE onekey login $TAILS           into the container, option: [container name or id]
    $WHITE onekey destroy $TAILS         stop all docker containers and then remove them
    $WHITE onekey rmi $TAILS             exec docker-compose down and then remove all related docker images
    $WHITE onekey logs $TAILS            Show docker container running logs
    $WHITE onekey help $TAILS            command list

    "
    exit
  ;;
esac
