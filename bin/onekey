#!/bin/bash

. $ONEKEY_ENV_PATH/sh/color.sh

# check env path
if [[ "$ONEKEY_ENV_PATH" == "" ]]
then
  echo -e "Please set your ONEKEY_ENV_PATH for the env path <You can get the help from the README> ..."
  exit
fi

# 获取输入命令
command=$1

case $command in
  "build" )
    $OUTPUT "$RED  Build the docker config $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/build.sh $2
    exit
  ;;
  "start" )
    $OUTPUT "$RED  Start the docker container $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/start.sh
    exit
  ;;
  "restart" )
    $OUTPUT "$RED  Restart the docker container $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/restart.sh
    exit
  ;;
  "login" )
    $OUTPUT "$RED  Into the docker container $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/login.sh $2
    exit
  ;;
  "stop" )
    $OUTPUT "$RED  Stop the docker container $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/stop.sh
    exit
  ;;
  "destroy" )
    $OUTPUT "$RED  Delete the docker container $TAILS\n"
    bash $ONEKEY_ENV_PATH/sh/docker/destroy.sh
    exit
  ;;
  "list" )
    $OUTPUT "$RED  Show all the container $TAILS\n"
    docker ps -a | grep onekey
    exit
  ;;
  * )
$OUTPUT "
  $BLUE$FLICKER Building a development environment for the onekey team using docker $TAILS
  $BLUE$FLICKER Support onekey project develop $TAILS

  $YELLOW ONEKEY Docker Command: $TAILS
    $WHITE onekey build <config> $TAILS  build docker config.
    $WHITE onekey list $TAILS            show container list
    $WHITE onekey start $TAILS           start container
    $WHITE onekey restart $TAILS         restart container
    $WHITE onekey stop $TAILS            stop container
    $WHITE onekey login $TAILS           into the container, option: [container name or id]
    $WHITE onekey destroy $TAILS         destroy container and delete docker image
    $WHITE onekey help $TAILS            commands list

    "
    exit
  ;;
esac
